name: release

on:
  push:
    tags:
    - "v*.*.*"

env:
  TAG: ${{ github.ref_name }}
  GHCR_REGISTRY: ghcr.io

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setupGo
      uses: actions/setup-go@v5
      with:
        go-version: '=1.21.8'
    - name: Docker login ghcr.io
      uses: docker/login-action@v3
      with:
        registry: ${{ env.GHCR_REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build docker image for ghcr.io
      run: make docker-build-all TAG=${{ env.TAG }}
    - name: Push docker image to ghcr.io
      run: make docker-push-all TAG=${{ env.TAG }} PROD_REGISTRY=${{ env.GHCR_REGISTRY }}
    - name: Read prime registry secrets
      uses: rancher-eio/read-vault-secrets@main
      with:
        secrets: |
          secret/data/github/repo/${{ inputs.github_repository_for_docker }}/registry/prime/rancher/cluster-api-controller/credentials username | DOCKER_USERNAME;
          secret/data/github/repo/${{ inputs.github_repository_for_docker }}/registry/prime/rancher/cluster-api-controller/credentials password | DOCKER_PASSWORD;
    - name: Docker login to registry
      uses: docker/login-action@v3
      with:
        registry: ${{ vars.PRIME_REGISTRY }}
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}
    - name: Build docker image for prime registry
      run: make docker-build-all TAG=${{ env.TAG }}
    - name: Push docker image to prime registry
      run: make docker-push-all TAG=${{ env.TAG }} PROD_REGISTRY=${{ vars.PRIME_REGISTRY }}
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs: [build]
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: setupGo
      uses: actions/setup-go@v5
      with:
        go-version: '=1.21.8'
    - name: Update manifests
      run: |
        make release RELEASE_TAG=${{ env.TAG }}
    - name: Release
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create ${{ env.TAG }} --draft --generate-notes
        gh release upload ${{ env.TAG }} out/metadata.yaml
        gh release upload ${{ env.TAG }} out/bootstrap-components.yaml
        gh release upload ${{ env.TAG }} out/control-plane-components.yaml